Audit_JDBC:
  AUDIT_JDBC_connection_userPassword_password: "Sa*201299"
  AUDIT_JDBC_drivers: "C:/Users/sonia/Downloads/mysql-connector-j-9.0.0/mysql-connector-j-9.0.0/mysql-connector-j-9.0.0.jar"
  AUDIT_JDBC_connection_driverClass: "com.mysql.cj.jdbc.Driver"
  AUDIT_JDBC_mappingFile: "mysql_id"
  AUDIT_JDBC_connection_userPassword_userId: "root"
  AUDIT_JDBC_connection_jdbcUrl: "jdbc:mysql://localhost:3306/sqops_dataraise?allowLoadLocalInfile=true&characterEncoding=utf8"


queries:
  LOCAL_TO_DBBRUT_QUERY: "select distinct PROJECT_NAME, JOB_NAME, JOB_PATH, JOB_VERSION, Talend_Version from audit_jobs_delta where talend_version is not null and niveau is not null"
  LOCAL_TO_DBBRUT_FILTER_name_elementNode: "where aud_nameElementNode in ('DBNAME','TYPE','QUERY','TABLE','FILENAME','TEMPDIR','sql','query')"
  LOCAL_TO_DBBRUT_FILTER_columnName_metadata: "where aud_columnName not in ('errorCode','errorMessage')"
  LOCAL_TO_DBBRUT_QUERY_ROUTINES: "select distinct PROJECT_NAME, ROUTINE_NAME, ROUTINE_PATH, ROUTINE_VERSION, Talend_Version from audit_routines where talend_version is not null"
  LOCAL_TO_DBBRUT_QUERY_CONTEXTGROUP: "select distinct PROJECT_NAME, CONTEXT_NAME, CONTEXT_PATH, CONTEXT_VERSION, Talend_Version from audit_contextgroup where talend_version is not null"
  LOCAL_TO_DBBRUT_QUERY_METADATA: "select distinct PROJECT_NAME, METADATA_NAME, METADATA_PATH, METADATA_VERSION, Talend_Version from audit_metadata where talend_version is not null"
  TRANSVERSE_QUERY_LASTEXECUTIONDATE: "SELECT MAX(lastexecutiondate) as lastexecutiondate FROM executiondate"
  LOCAL_TO_DBBRUT_QUERY_JOBLETS: "select distinct PROJECT_NAME, JOBLET_NAME, JOBLET_PATH, JOBLET_VERSION, Talend_Version from audit_joblets where talend_version is not null"
  aud_elementnode: "select distinct namejob, nameproject from aud_elementnode where NameJob not in (select job_name from audit_jobs)"
  aud_contextjob: "select distinct namejob, nameproject from aud_contextjob where NameJob not in (select job_name from audit_jobs)"
  aud_node : "select distinct namejob, nameproject from aud_node where NameJob not in (select job_name from audit_jobs)"
  NodeJoinElementnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_node N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_bigdata : "select distinct namejob, nameproject from aud_bigdata where NameJob not in (select job_name from audit_jobs)"
  aud_metadata : "select distinct namejob, nameproject from aud_metadata where NameJob not in (select job_name from audit_jobs)"
  MetadataJoinElemntnode : "select  distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_metadata N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_vartable : "select distinct namejob, nameproject from aud_vartable where NameJob not in (select job_name from audit_jobs)"
  aud_vartable_xml : "select distinct namejob, nameproject from aud_vartable_xml where NameJob not in (select job_name from audit_jobs)"
  vartableJoinElemntnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_vartable N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  vartable_xmlJoinElemntnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_vartable_xml N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_outputTable : "select distinct namejob, nameproject from aud_outputtable where NameJob not in (select job_name from audit_jobs)"
  outputtableJoinElemntnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_outputtable N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_inputtable : "select distinct namejob, nameproject from aud_inputtable where NameJob not in (select job_name from audit_jobs)"
  inputtableJoinElemntnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_inputtable N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_connectioncomponent : "select distinct namejob, nameproject from aud_connectioncomponent where NameJob not in (select job_name from audit_jobs)"
  aud_connectioncomponentwhere : "SELECT distinct NameProject, NameJob, aud_sourceComponent, aud_targetComponent FROM aud_connectioncomponentwhere aud_name = 'ACTIVATE' AND aud_value = 'false'"
  aud_elementparameter : "select distinct namejob, nameproject from aud_elementparameter where NameJob not in (select job_name from audit_jobs)"
  aud_routines : "select distinct namejob, nameproject from aud_routines where NameJob not in (select job_name from audit_jobs)"
  aud_library : "select distinct namejob, nameproject from aud_library where NameJob not in (select job_name from audit_jobs)"
  aud_elementvaluenode : "select distinct namejob, nameproject from aud_elementvaluenode where NameJob not in (select job_name from audit_jobs)"
  elementvaluenodeJoinelementnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_elementvaluenode N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  audit_jobs_delta : "select distinct PROJECT_NAME,JOB_NAME,JOB_PATH,JOB_VERSION,Talend_Version from  audit_jobs_delta where talend_version is not null"
  aud_job_fils : "select distinct aud_namejob, aud_nameproject from aud_job_fils where aud_NameJob not in (select job_name from audit_jobs)"
  audit_jobs_delta : "select distinct PROJECT_NAME,JOB_NAME,JOB_PATH,JOB_VERSION,Talend_Version from  audit_jobs_delta where talend_version is not null"
  Update_job_fils : "select PROJECT_NAME, JOB_NAME, JOB_VERSION, Talend_Version, JOB_PATH, label, '1' as niveau from audit_jobs where (job_name, project_name) in (select distinct jobname, generatedprojectname from aud_tac_taskexecution) union all select PROJECT_NAME, JOB_NAME, JOB_VERSION, Talend_Version, JOB_PATH, label, '2' as niveau from audit_jobs  where (job_name, project_name) in (select distinct aud_Value, aud_nameproject from aud_job_fils jf inner join aud_tac_taskexecution t on (jf.aud_namejob  = t.jobname and jf.aud_nameproject = t.generatedprojectname  ) where jf.aud_Name = 'PROCESS') union all select PROJECT_NAME, JOB_NAME, JOB_VERSION, Talend_Version, JOB_PATH, label, '3' as niveau from audit_jobs  where (job_name, project_name) in (select distinct aud_Value, aud_nameproject from aud_job_fils where (aud_namejob , aud_nameproject) in (select distinct  aud_Value, aud_nameproject from aud_job_fils jf inner join aud_tac_taskexecution t on (jf.aud_namejob  = t.jobname and jf.aud_nameproject = t.generatedprojectname  ) where jf.aud_Name = 'PROCESS') and aud_Name = 'PROCESS') union all select PROJECT_NAME, JOB_NAME, JOB_VERSION, Talend_Version, JOB_PATH, label, '4' as niveau from audit_jobs  where (job_name, project_name) in (select distinct aud_Value, aud_nameproject from aud_job_fils where (aud_namejob , aud_nameproject) in ( select distinct aud_Value, aud_nameproject from aud_job_fils where (aud_namejob , aud_nameproject) in (select distinct  aud_Value, aud_nameproject from aud_job_fils jf inner join aud_tac_taskexecution t on (jf.aud_namejob  = t.jobname and jf.aud_nameproject = t.generatedprojectname  ) where jf.aud_Name = 'PROCESS') and aud_Name = 'PROCESS') and aud_Name = 'PROCESS')"
  aud_joblets : "select distinct namejob, nameproject from aud_joblets where NameJob not in (select job_name from audit_jobs)"
  jobletsJoinelementnode : "select distinct N.NameProject, N.NameJob, N.aud_ComponentValue from aud_joblets N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_ComponentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_subjobs : "select distinct namejob, nameproject from aud_subjobs where NameJob not in (select job_name from audit_jobs)"
  aud_varcontext : "select distinct namejob, nameproject from aud_varcontext where NameJob not in (select job_name from audit_jobs)"
  RÃ©cup_comp : "select distinct NameProject, NameJob, aud_componentName, aud_ComponementValue, aud_valueElementNode aud_expression from aud_elementnode where aud_valueElementNode LIKE '%context.%' union all select distinct NameProject, NameJob, aud_componentName, aud_componentValue, aud_expressionJoin aud_expression from aud_inputtable where aud_expressionJoin like '%context.%' union all select distinct NameProject, NameJob, aud_componentName, aud_componentValue, aud_expressionJoin aud_expression from aud_inputtable where aud_expressionFilterInput like '%context.%' union all select distinct NameProject, NameJob, aud_componentName, aud_componentValue, aud_expressionVar aud_expression from aud_vartable where aud_expressionVar like '%context.%' union all select distinct NameProject, NameJob, aud_componentName, aud_componentValue, aud_expressionOutput aud_expression from aud_outputtable where aud_expressionOutput like '%context.%' union all select distinct NameProject, NameJob, aud_componentName, aud_componentValue, aud_expressionFilterOutput aud_expression from aud_outputtable where aud_expressionFilterOutput like '%context.%' union all select distinct NameProject, NameJob, aud_componentName, aud_componentValue, aud_valueElementRef aud_expression from aud_elementvaluenode where aud_valueElementRef like '%context.%'"
  aud_metadata_filter : "SELECT aud_connector, aud_labelConnector, aud_nameComponentView, aud_comment, aud_key, aud_length, aud_columnName, aud_nullable, aud_pattern, aud_precision, aud_sourceType, aud_type, aud_usefulColumn, aud_originalLength, aud_defaultValue, aud_componentValue, aud_componentName, NameProject, NameJob,exec_date FROM aud_metadata LOCAL_TO_DBBRUT_FILTER_columnName_metadata"
  aud_elementnode_filter : "SELECT aud_componentName, aud_field, aud_nameElementNode, aud_show,   aud_valueElementNode, aud_ComponementValue, NameProject, NameJob, exec_date FROM aud_elementnode WHERE aud_nameElementNode IN ('DBNAME', 'TYPE', 'QUERY', 'TABLE', 'FILENAME', 'TEMPDIR', 'sql', 'query')"
  ActiveNodes_job_fils : "select aud_ComponentValue, aud_NameProject, aud_NameJob from aud_job_fils  where aud_Name = 'ACTIVATE' and aud_Value = 'false'"
  ActiveNodes_elementnode :  "select aud_ComponementValue, NameProject, NameJob from aud_elementnode  where aud_nameElementNode = 'ACTIVATE' and aud_valueElementNode = 'false'"
  aud_docjobs : "select distinct namejob, nameproject from aud_docjobs where NameJob not in (select job_name from audit_jobs)"
  aud_inputtable_xml : "select distinct namejob, nameproject from aud_inputtable_xml where NameJob not in (select job_name from audit_jobs)"
  aud_screenshot : "select distinct namejob, nameproject from aud_screenshot where NameJob not in (select job_name from audit_jobs)"






agg_queries:
  aud_agg: "select a.NameProject, a.namejob, a.aud_componentValue, a.aud_valueElementRef as aud_valueElementRef_input, b.aud_valueElementRef as aud_valueElementRef_output, 'GROUPBY' as aud_valueElementRef_function from aud_elementvaluenode a inner join aud_elementvaluenode b on a.aud_id = b.aud_id where a.aud_typeField in ('GROUPBYS') and b.aud_typeField in ('GROUPBYS') and a.aud_elementRef = 'INPUT_COLUMN' and b.aud_elementRef = 'OUTPUT_COLUMN' and a.aud_componentName like 'tAggregate%' and b.aud_componentName like 'tAggregate%' union all select a.NameProject, a.namejob, a.aud_componentValue, a.aud_valueElementRef as aud_valueElementRef_input, b.aud_valueElementRef as aud_valueElementRef_output, c.aud_valueElementRef as aud_valueElementRef_function from aud_elementvaluenode a inner join aud_elementvaluenode b on a.aud_id = b.aud_id inner join aud_elementvaluenode c on a.aud_id = c.aud_id where a.aud_componentName like 'tAggregate%' and a.aud_typeField = 'OPERATIONS' and b.aud_componentName like 'tAggregate%' and b.aud_typeField = 'OPERATIONS' and c.aud_componentName like 'tAggregate%' and c.aud_typeField = 'OPERATIONS' and a.aud_elementRef = 'INPUT_COLUMN' and b.aud_elementRef = 'OUTPUT_COLUMN' and c.aud_elementRef = 'FUNCTION'"
  aud_inputtable : "SELECT  aud_nameRowInput ,aud_nameColumnInput,aud_expressionJoin,aud_expressionFilterInput,aud_componentValue,aud_innerJoin,NameProject, NameJob FROM aud_inputtable"
  aud_outputtable : "SELECT aud_componentName,aud_OutputName, aud_sizeState, aud_activateCondensedTool, aud_reject, aud_rejectInnerJoin, aud_expressionOutput, aud_nameColumnOutput, aud_type, aud_nullable, aud_activateExpressionFilter, aud_expressionFilterOutput, aud_componentValue, NameProject,NameJob FROM aud_outputtable"
  aud_vartable : "SELECT V.aud_componentValue,V.aud_Var,V.aud_nameVar,V.aud_expressionVar,V.NameProject,V.NameJob FROM aud_vartable  V"
  aud_inputtable_nb : "select count(distinct aud_namerowInput) nb_input, aud_componentValue, namejob, nameproject from aud_inputtable  group by aud_componentValue , namejob, nameproject"
  aud_inputtable_xml: "SELECT aud_nameColumnInput,aud_type,aud_xpathColumnInput,aud_nameRowInput, aud_componentName, aud_componentValue, filterOutGoingConnections, lookupOutgoingConnections, outgoingConnections, namejob, nameproject, exec_date,lookupIncomingConnections, expression, lookupMode, matchingMode, activateCondensedTool, activateExpressionFilter, activateGlobalMap, expressionFilter, filterIncomingConnections, lookup FROM aud_inputtable_xml"
  aud_outputtable_xml : "SELECT aud_nameColumnInput, aud_type,aud_xpathColumnInput, aud_nameRowOutput, aud_componentName, aud_componentValue, filterOutGoingConnections, outgoingConnections, namejob, nameproject, exec_date, expression, activateCondensedTool,activateExpressionFilter, expressionFilter, filterIncomingConnections FROM aud_outputtable_xml"
  aud_inputtable_xml_nb : "select count(distinct aud_nameRowInput) nb_input, aud_componentValue, namejob, nameproject from aud_inputtable_xml  group by aud_componentValue , namejob, nameproject"
  aud_vartable_xml : "SELECT aud_componentName, aud_componentValue, aud_Var, aud_sizeState, aud_nameVar, aud_expressionVar, aud_type, NameProject, NameJob FROM aud_vartable_xml"
  aud_agg_txmlmapinputinoutput : "SELECT distinct aud_nameColumnInput, aud_nameRowInput, aud_componentName, output_nameproject, output_namejob FROM aud_agg_txmlmapinputinoutput "
  aud_agg_txmlmapinputinfilteroutput : "SELECT distinct rowName, NameRowInput, aud_componentName,expressionFilterOutput, NameProject, NameJob FROM aud_agg_txmlmapinputinfilteroutput "
  aud_agg_txmlmapinputinjoininput : "SELECT distinct rowName, NameColumnInput, aud_componentName, NameProject, NameJob FROM aud_agg_txmlmapinputinjoininput"
  aud_agg_txmlmapinputinfilterinput : "SELECT distinct rowName, NameColumnInput, composant, NameProject, NameJob FROM aud_agg_txmlmapinputinfilterinput"
  aud_agg_txmlmapinputinvar : "SELECT distinct rowName, NameRowInput, composant, NameProject, NameJob FROM aud_agg_txmlmapinputinvar"

insert_agg_queries:
  aud_agg_tmapinputinoutput : "INSERT INTO aud_agg_tmapinputinoutput (rowName, NameRowInput, composant, expressionOutput, nameColumnOutput, OutputName, reject, rejectInnerJoin, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE expressionOutput = VALUES(expressionOutput), reject = VALUES(reject), rejectInnerJoin = VALUES(rejectInnerJoin)"
  aud_agg_tmapinputinfilteroutput : "INSERT INTO aud_agg_tmapinputinfilteroutput (rowName, NameRowInput, composant, expressionFilterOutput, aud_OutputName, reject, rejectInnerJoin, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE expressionFilterOutput = VALUES(expressionFilterOutput), reject = VALUES(reject), rejectInnerJoin = VALUES(rejectInnerJoin)"
  aud_agg_tmapinputinjoininput : "INSERT INTO aud_agg_tmapinputinjoininput (rowName, NameColumnInput, expressionJoin, composant, innerJoin, NameProject, NameJob, is_columnjoined, rowName_join, NameColumnInput_join) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE expressionJoin = VALUES(expressionJoin), innerJoin = VALUES(innerJoin), is_columnjoined = VALUES(is_columnjoined), rowName_join = VALUES(rowName_join), NameColumnInput_join = VALUES(NameColumnInput_join)"
  aud_agg_tmapinputinfilterinput : "INSERT INTO aud_agg_tmapinputinfilterinput (rowName, NameColumnInput, expressionFilterInput, composant, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE expressionFilterInput = VALUES(expressionFilterInput)"
  aud_agg_tmapinputinvar : "INSERT INTO aud_agg_tmapinputinvar (rowName, NameRowInput, composant, expressionOutput, nameColumnOutput, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE expressionOutput = VALUES(expressionOutput)"
  aud_agg_tmapvarinfilter : "INSERT INTO aud_agg_tmapvarinfilter (NameRowInput, composant, expressionFilterOutput, OutputName, reject, rejectInnerJoin, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE expressionFilterOutput = VALUES(expressionFilterOutput), reject = VALUES(reject), rejectInnerJoin = VALUES(rejectInnerJoin)"
  aud_agg_tmapcolumunused : "INSERT INTO aud_agg_tmapcolumunused (rowName, NameColumnInput, composant, NameProject, NameJob) VALUES (?, ?, ?, ?, ?)"
  aud_agg_tmapinput : "INSERT INTO aud_agg_tmapinput (nb_input, aud_componentValue, NameJob, NameProject) VALUES (?, ?, ?, ?) ON DUPLICATE KEY UPDATE nb_input = VALUES(nb_input) "
  aud_agg_txmlmapinputinoutput : "INSERT INTO aud_agg_txmlmapinputinoutput (aud_nameColumnInput, aud_nameRowInput, aud_componentName, expressionOutput, output_aud_nameColumnInput, aud_nameRowOutput, output_namejob, output_nameproject) VALUES (?, ?, ?, ?, ?, ?, ?, ?)"
  aud_agg_txmlmapinputinfilteroutput : "INSERT INTO aud_agg_txmlmapinputinfilteroutput (rowName, NameRowInput, aud_componentName, expressionFilterOutput, aud_OutputName, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?, ?)"
  aud_agg_txmlmapinputinjoininput : "INSERT INTO .aud_agg_txmlmapinputinjoininput (rowName, NameColumnInput, aud_componentName, expressionJoin, NameProject, NameJob, is_columnjoined, rowName_join, NameColumnInput_join) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)"
  aud_agg_txmlmapinputinfilterinput : "INSERT INTO aud_agg_txmlmapinputinfilterinput (rowName, NameColumnInput, expressionFilterInput, composant, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?)"
  aud_agg_txmlmapinputinvar : "INSERT INTO aud_agg_txmlmapinputinvar (rowName, NameRowInput, composant, expressionOutput, nameColumnOutput, NameProject, NameJob) VALUES (?, ?, ?, ?, ?, ?, ?)"
  aud_agg_txmlmapcolumunused : "INSERT INTO aud_agg_txmlmapcolumunused (rowName, NameColumnInput, composant, NameProject, NameJob) VALUES (?, ?, ?, ?, ?)"
  aud_agg_txmlmapinput : "INSERT INTO aud_agg_txmlmapinput (nb_input, aud_componentValue, NameJob, NameProject) VALUES (?, ?, ?, ?)"
  aud_agg_aggregate : "INSERT INTO aud_agg_aggregate (NameProject, namejob, aud_componentValue, aud_valueElementRef_input, aud_valueElementRef_output, aud_valueElementRef_function) VALUES (?, ?, ?, ?, ?, ?)"


Directories:
  items_directory: "C:/Users/sonia/Downloads/KEOLISTOURS/KEOLISTOURS/process"
  screenshots_directory : "C:/Users/sonia/Desktop/TOS_ESB/Studio/workspace/SERVER/process"
  delete_files : "C:/Users/sonia/Desktop/FilesList"
database:
  type: "mysql"  # Example database type
  postgresql:
    user: "postgres"
    password: "your_password"
    host: "localhost"
    port: 5432
    dbname: "dataraise_test"
  mysql:
    user: "root"
    password: "Sa*201299"
    host: "127.0.0.1"
    port: 3306
    dbname: "sqops_dataraise"
  sqlite:
    filepath: "path/to/your/sqlite.db"
 
ORA_ECH_ADMECH:
  CTX_ORA_ECH_ADMECH_Server: "echdfr.cfo1dl4btaz7.eu-west-1.rds.amazonaws.com"
  CTX_ORA_ECH_ADMECH_Password: ""
  CTX_ORA_ECH_ADMECH_Login: "ADM_ECH"
  CTX_ORA_ECH_ADMECH_Port: "1521"
  CTX_ORA_ECH_ADMECH_AdditionalParams: ""
  CTX_ORA_ECH_ADMECH_Schema: "ADM_ECH"
  CTX_ORA_ECH_ADMECH_Sid: "echdfr"

Audit_JDBC:
  AUDIT_JDBC_connection_userPassword_password: "Sa*201299"
  AUDIT_JDBC_drivers: "C:/Users/sonia/Downloads/mysql-connector-j-9.0.0/mysql-connector-j-9.0.0/mysql-connector-j-9.0.0.jar"
  AUDIT_JDBC_connection_driverClass: "com.mysql.cj.jdbc.Driver"
  AUDIT_JDBC_mappingFile: "mysql_id"
  AUDIT_JDBC_connection_userPassword_userId: "root"
  AUDIT_JDBC_connection_jdbcUrl: "jdbc:mysql://localhost:3306/sqops_dataraise?allowLoadLocalInfile=true"

queries:
  LOCAL_TO_DBBRUT_QUERY: "select distinct PROJECT_NAME, JOB_NAME, JOB_PATH, JOB_VERSION, Talend_Version from audit_jobs_delta where talend_version is not null and niveau is not null"
  LOCAL_TO_DBBRUT_FILTER_name_elementNode: "where aud_nameElementNode in ('DBNAME','TYPE','QUERY','TABLE','FILENAME','TEMPDIR','sql','query')"
  LOCAL_TO_DBBRUT_FILTER_columnName_metadata: "where aud_columnName not in ('errorCode','errorMessage')"
  LOCAL_TO_DBBRUT_QUERY_ROUTINES: "select distinct PROJECT_NAME, ROUTINE_NAME, ROUTINE_PATH, ROUTINE_VERSION, Talend_Version from audit_routines where talend_version is not null"
  LOCAL_TO_DBBRUT_QUERY_CONTEXTGROUP: "select distinct PROJECT_NAME, CONTEXT_NAME, CONTEXT_PATH, CONTEXT_VERSION, Talend_Version from audit_contextgroup where talend_version is not null"
  LOCAL_TO_DBBRUT_QUERY_METADATA: "select distinct PROJECT_NAME, METADATA_NAME, METADATA_PATH, METADATA_VERSION, Talend_Version from audit_metadata where talend_version is not null"
  TRANSVERSE_QUERY_LASTEXECUTIONDATE: "SELECT MAX(lastexecutiondate) as lastexecutiondate FROM executiondate"
  LOCAL_TO_DBBRUT_QUERY_JOBLETS: "select distinct PROJECT_NAME, JOBLET_NAME, JOBLET_PATH, JOBLET_VERSION, Talend_Version from audit_joblets where talend_version is not null"
  aud_elementnode: "select distinct namejob, nameproject from aud_elementnode where NameJob not in (select job_name from audit_jobs)"
  aud_contextjob: "select distinct namejob, nameproject from aud_contextjob where NameJob not in (select job_name from audit_jobs)"
  aud_node : "select distinct namejob, nameproject from aud_node where NameJob not in (select job_name from audit_jobs)"
  NodeJoinElementnode : "select distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_node N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
  aud_bigdata : "select distinct namejob, nameproject from aud_bigdata where NameJob not in (select job_name from audit_jobs)"
  aud_metadata : "select distinct namejob, nameproject from aud_metadata where NameJob not in (select job_name from audit_jobs)"
  MetadataJoinElemntnode : "select  distinct N.NameProject, N.NameJob, N.aud_componentValue from aud_metadata N inner join aud_elementnode E on (N.namejob = E.namejob and N.nameproject = E.nameproject and N.aud_componentValue = E.aud_ComponementValue) where E.aud_nameElementNode = 'ACTIVATE' and E.aud_valueElementNode = 'false' and E.exec_date = (select max(lastexecutiondate) from executiondate)"
insert_queries:
  aud_agg_aggregate: "INSERT IGNORE INTO aud_agg_aggregate (NameProject, namejob, aud_componentValue, aud_valueElementRef_input, aud_valueElementRef_output, aud_valueElementRef_function) SELECT a.NameProject, a.namejob, a.aud_componentValue, a.aud_valueElementRef as aud_valueElementRef_input, b.aud_valueElementRef as aud_valueElementRef_output, 'GROUPBY' as aud_valueElementRef_function FROM aud_elementvaluenode a INNER JOIN aud_elementvaluenode b ON a.aud_id : b.aud_id WHERE a.aud_typeField IN ('GROUPBYS') AND b.aud_typeField IN ('GROUPBYS') AND a.aud_elementRef : 'INPUT_COLUMN' AND b.aud_elementRef : 'OUTPUT_COLUMN' AND a.aud_componentName LIKE 'tAggregate%' AND b.aud_componentName LIKE 'tAggregate%' UNION ALL SELECT a.NameProject, a.namejob, a.aud_componentValue, a.aud_valueElementRef as aud_valueElementRef_input, b.aud_valueElementRef as aud_valueElementRef_output , c.aud_valueElementRef as aud_valueElementRef_function FROM aud_elementvaluenode a INNER JOIN aud_elementvaluenode b ON a.aud_id : b.aud_id INNER JOIN aud_elementvaluenode c ON a.aud_id : c.aud_id WHERE a.aud_componentName LIKE 'tAggregate%' AND a.aud_typeField : 'OPERATIONS' AND b.aud_componentName LIKE 'tAggregate%' AND b.aud_typeField : 'OPERATIONS' AND c.aud_componentName LIKE 'tAggregate%' AND c.aud_typeField : 'OPERATIONS' AND a.aud_elementRef : 'INPUT_COLUMN' AND b.aud_elementRef : 'OUTPUT_COLUMN' AND c.aud_elementRef : 'FUNCTION'"
  aud_elementnode : "INSERT IGNORE INTO aud_elementnode (aud_componentName,aud_field,aud_nameElementNode,aud_show,aud_valueElementNode,aud_ComponementValue,NameProject,NameJob,exec_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)"
  aud_contextjob : "INSERT IGNORE INTO aud_contextjob (aud_environementContext,aud_nameContext,aud_prompt,aud_promptNeeded,aud_typeContext,aud_valueContext,aud_repositoryContextId,NameProject,NameJob,exec_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?,?)"
  aud_contextgroupdetail : "INSERT IGNORE INTO aud_contextgroupdetail (aud_nameContext,aud_commentContext,NameProject,NameContextGroup,exec_date) VALUES (?, ?, ?, ?, ?)"
  aud_node : "INSERT IGNORE INTO aud_node (aud_componentName , aud_componentVersion , aud_offsetLabelX , aud_offsetLabelY , aud_posX , aud_posY , aud_componentValue , NameProject , NameJob , exec_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?,?)"
  aud_bigdata : "INSERT IGNORE INTO aud_bigdata (aud_field,aud_name,aud_show,aud_value,NameProject,NameJob,exec_date) VALUES (?, ?, ?, ?, ?, ?, ?)"
  aud_bigdata_elementvalue : "INSERT IGNORE INTO aud_bigdata_elementvalue (aud_elementRef,aud_value,aud_name,NameProject,NameJob,exec_date) VALUES (?, ?, ?, ?, ?, ?)"
  aud_metadata : "INSERT INTO aud_metadata(aud_connector,aud_labelConnector,aud_nameComponentView,aud_comment,aud_key,aud_length,aud_columnName,aud_nullable,aud_pattern,aud_precision,aud_sourceType,aud_type,aud_usefulColumn,aud_originalLength,aud_defaultValue,aud_componentValue,aud_componentName,NameProject,NameJob,exec_date) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE aud_connector = VALUES(aud_connector), aud_labelConnector = VALUES(aud_labelConnector), aud_nameComponentView = VALUES(aud_nameComponentView), aud_comment = VALUES(aud_comment), aud_key = VALUES(aud_key), aud_length = VALUES(aud_length), aud_columnName = VALUES(aud_columnName), aud_nullable = VALUES(aud_nullable), aud_pattern = VALUES(aud_pattern), aud_precision = VALUES(aud_precision), aud_sourceType = VALUES(aud_sourceType), aud_type = VALUES(aud_type), aud_usefulColumn = VALUES(aud_usefulColumn), aud_originalLength = VALUES(aud_originalLength), aud_defaultValue = VALUES(aud_defaultValue), aud_componentValue = VALUES(aud_componentValue), aud_componentName = VALUES(aud_componentName), exec_date = VALUES(exec_date)"
Directories:
  items_directory: "C:/Users/sonia/Downloads/KEOLISTOURS/KEOLISTOURS/process"

database:
  type: "mysql"  # Example database type
  postgresql:
    user: "postgres"
    password: "your_password"
    host: "localhost"
    port: 5432
    dbname: "dataraise_test"
  mysql:
    user: "root"
    password: "Sa*201299"
    host: "127.0.0.1"
    port: 3306
    dbname: "sqops_dataraise"
  sqlite:
    filepath: "path/to/your/sqlite.db"
 
ORA_ECH_ADMECH:
  CTX_ORA_ECH_ADMECH_Server: "echdfr.cfo1dl4btaz7.eu-west-1.rds.amazonaws.com"
  CTX_ORA_ECH_ADMECH_Password: ""
  CTX_ORA_ECH_ADMECH_Login: "ADM_ECH"
  CTX_ORA_ECH_ADMECH_Port: "1521"
  CTX_ORA_ECH_ADMECH_AdditionalParams: ""
  CTX_ORA_ECH_ADMECH_Schema: "ADM_ECH"
  CTX_ORA_ECH_ADMECH_Sid: "echdfr"
